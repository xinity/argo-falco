falco:
    falcosidekick:
        enabled: true
        webui:
            enabled: true
        config:
            webhook:
                address: http://webhook-falco-eventsource-svc.argo-events.svc.cluster.local:12000/falco
                customHeaders: Source:falco
    fakeEventGenerator:
      enabled: false
    falco:
      rulesFile:
        - /etc/falco/falco_rules.yaml
        - /etc/falco/falco_rules.local.yaml
        - /etc/falco/k8s_audit_rules.yaml
        - /etc/falco/rules.d/custom-rules.yaml
    customRules:
      custom-rules.yaml: |-
        - rule: COOKIE tampering detector
          desc: Detect tampering of super precious cookie recipes
          condition: modify and (evt.arg.oldpath startswith '/usr/share/nginx' or evt.arg.path startswith '/usr/share/nginx')
          output: Cookie recipes tampering detected, secure your cookies,(uid=%user.uid container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag %evt.arg.oldpath)
          priority: EMERGENCY
          tags: [importantrecipesalert]
        - rule: Terminal shell in container
          desc: A shell was used as the entrypoint/exec point into a container with an attached terminal.
          condition: >
            spawned_process and container
            and shell_procs and proc.tty != 0
            and container_entrypoint
            and not user_expected_terminal_shell_in_container_conditions
          output: >
            A shell was spawned in a container with an attached terminal (user=%user.name user_loginuid=%user.loginuid %container.info
            shell=%proc.name parent=%proc.pname cmdline=%proc.cmdline terminal=%proc.tty container_id=%container.id image=%container.image.repository)
          priority: CRITICAL
          tags: [container, shell, mitre_execution]
